{"version":3,"sources":["gpxmake.js"],"names":["root","factory","exports","module","define","amd","Gpxmake","this","info","metadata","track","route","waypoints","fileInfo","utils","extend","setMetaData","meta","name","desc","time","keywords","author","email","id","domain","console","warn","link","href","text","type","copyright","year","licence","bounds","minlat","minlon","maxlat","maxlon","setFileContent","xml","elements","rteType","trkType","wptType","creator","prototype","download","filename","content","blob","Blob","document","createElement","body","appendChild","detectIE","window","navigator","msSaveOrOpenBlob","URL","createObjectURL","click","addTrack","trk","key","indexOf","trkpts","points","i","length","lat","lon","addRoute","rte","rtepts","addWaypoints","wpt","arguments","hasOwnProperty","ua","userAgent","msie","trident","edge"],"mappings":"CAQC,SAASA,EAAMC,GAES,mBAAZC,SACa,mBAAXC,UACTD,QAAUC,OAAOD,QAAUD,EAAQD,EAAME,UAEhB,kBAAXE,SAAyBA,OAAOC,IAChDD,QAAQ,WAAY,SAASF,GAC3BF,EAAKM,QAAUL,EAAQD,EAAME,KAG/BF,EAAKM,QAAUL,KAGjBM,KAAM,WAEN,YAaA,SAASD,GAAQE,GAEfD,KAAKE,SAAW,GAChBF,KAAKG,MAAQ,GACbH,KAAKI,MAAQ,GACbJ,KAAKK,UAAY,GAEjBC,EAAWC,EAAMC,OAAOF,EAAUL,GAElCD,KAAKE,SAAWO,EAAYH,GA4B9B,QAASG,GAAYP,GAEnB,GAAIQ,GAAO,cAGPR,GAASS,OACXD,GAAQ,SAAWR,EAASS,KAAO,aAGjCT,EAASU,OACXF,GAAQ,SAAWR,EAASU,KAAO,aAGjCV,EAASW,OACXH,GAAQ,SAAWR,EAASW,KAAO,aAGjCX,EAASY,WACXJ,GAAQ,aAAeR,EAASY,SAAW,gBAG7C,IAAIC,GAASb,EAASa,MAClBA,KACFL,GAAQ,aACJK,EAAOJ,OACTD,GAAQ,SAAWK,EAAOJ,KAAO,aAE/BI,EAAOC,QACLD,EAAOC,MAAMC,IAAMF,EAAOC,MAAME,OAClCR,GAAQ,cAAgBK,EAAOC,MAAMC,GAAK,aAAeF,EAAOC,MAAME,OAAS,SAE/EC,QAAQC,KAAK,2DAGbL,EAAOM,OACLN,EAAOM,KAAKC,MACdZ,GAAQ,eAAiBK,EAAOM,KAAKC,KAAO,OAExCP,EAAOM,KAAKE,OACdb,GAAQ,SAAWK,EAAOM,KAAKE,KAAO,aAEpCR,EAAOM,KAAKG,OACdd,GAAQ,SAAWK,EAAOM,KAAKG,KAAO,aAExCd,GAAQ,aAERS,QAAQC,KAAK,iDAGjBV,GAAQ,cAIV,IAAIe,GAAYvB,EAASuB,SACrBA,KACEA,EAAUV,QACZL,GAAQ,sBAAwBe,EAAUV,OAAS,OAE/CU,EAAUC,OACZhB,GAAQ,SAAWe,EAAUC,KAAO,aAElCD,EAAUE,UACZjB,GAAQ,YAAce,EAAUE,QAAU,gBAE5CjB,GAAQ,kBAERS,QAAQC,KAAK,uDAKjB,IAAIC,GAAOnB,EAASmB,IAChBA,KACEA,EAAKC,MACPZ,GAAQ,eAAiBW,EAAKC,KAAO,OAEjCD,EAAKE,OACPb,GAAQ,SAAWW,EAAKE,KAAO,aAE7BF,EAAKG,OACPd,GAAQ,SAAWW,EAAKG,KAAO,aAEjCd,GAAQ,WAERS,QAAQC,KAAK,gDAKjB,IAAIQ,GAAS1B,EAAS0B,MAUtB,OATIA,KACEA,EAAOC,QAAUD,EAAOE,QAAUF,EAAOG,QAAUH,EAAOI,OAC5DtB,GAAQ,mBAAqBkB,EAAOC,OAAS,aAAeD,EAAOE,OAAS,aAAeF,EAAOG,OAAS,aAAeH,EAAOI,OAAS,SAE1Ib,QAAQC,KAAK,gFAIjBV,GAAQ,gBA0OV,QAASuB,GAAe/B,EAAUC,EAAOC,EAAOC,GAE9C,GAAI6B,GAAM,sSAaV,OANAA,IAAOhC,EACPgC,GAAO/B,EACP+B,GAAO9B,EACP8B,GAAO7B,EACP6B,GAAO,SAzYT,GAAIC,IACFC,SAAY,OAAQ,MAAO,OAAQ,MAAO,OAAQ,SAAU,QAC5DC,SAAY,OAAQ,MAAO,OAAQ,MAAO,OAAQ,SAAU,QAC5DC,SAAY,MAAO,MAAO,MAAO,OAAQ,SAAU,cAAe,OAAQ,MAAO,OAAQ,MAAO,MAAO,UAAW,MAAO,OAAQ,MAAO,MAAO,OAAQ,OAAQ,OAAQ,gBAAiB,WAGtLhC,GACFiC,QAAS,UAiBXxC,GAAQyC,UAAUC,SAAW,SAASC,GAEpCA,GAAsB,MAEtB,IAAIC,GAAUV,EAAejC,KAAKE,SAAUF,KAAKG,MAAOH,KAAKI,MAAOJ,KAAKK,WAErEuC,EAAO,GAAIC,OAAMF,IACnBnB,KAAQ,oBAGNH,EAAOyB,SAASC,cAAc,IAClCD,UAASE,KAAKC,YAAY5B,GAGrBd,EAAM2C,WAMTC,OAAOC,UAAUC,iBAAiBT,EAAMF,IALxCrB,EAAKC,KAAO6B,OAAOG,IAAIC,gBAAgBX,GACvCvB,EAAKoB,SAAWC,EAChBrB,EAAKmC,UA6GTzD,EAAQyC,UAAUiB,SAAW,SAAStD,GAEpC,GAAIuD,GAAM,SAGV,KAAK,GAAIC,KAAOxD,GACd,GAA0B,gBAAfA,GAAMwD,GACXxB,EAASE,QAAQuB,QAAQD,KAAQ,EACnCD,GAAO,IAAMC,EAAM,IAAMxD,EAAMwD,GAAO,KAAOA,EAAM,MAEnDxC,QAAQC,KAAK,IAAMuC,EAAM,0CAG3B,IAAW,QAAPA,EAAe,CACjB,GAAItC,GAAOlB,EAAY,IACnBkB,GAAKC,OACPoC,GAAO,eAAiBrC,EAAKC,KAAO,KAChCD,EAAKE,OACPmC,GAAO,SAAWrC,EAAKE,KAAO,aAE5BF,EAAKG,OACPkC,GAAO,SAAWrC,EAAKG,KAAO,aAEhCkC,GAAO,WAMfA,GAAO,YAEP,IAAIG,GAAS1D,EAAM2D,MAEnB,IAAID,EACF,IAAK,GAAIE,GAAI,EAAGA,EAAIF,EAAOG,OAAQD,IAAK,CAEtC,GAAIE,GAAMJ,EAAOE,GAAQ,IACrBG,EAAML,EAAOE,GAAQ,GAEzB,KAAIE,IAAOC,EAkCT,KAAM,+EAhCNR,IAAO,eAAiBO,EAAM,UAAYC,EAAM,MAGhD,KAAK,GAAIP,KAAOE,GAAOE,GACrB,GAAW,OAAPJ,GAAuB,OAAPA,EAClB,GAAIxB,EAASG,QAAQsB,QAAQD,KAAQ,EACnC,GAAW,QAAPA,EAAe,CACjB,GAAItC,GAAOwC,EAAOE,GAAS,IACvB1C,GAAKC,OACPoC,GAAO,eAAiBrC,EAAKC,KAAO,KAChCD,EAAKE,OACPmC,GAAO,SAAWrC,EAAKE,KAAO,aAE5BF,EAAKG,OACPkC,GAAO,SAAWrC,EAAKG,KAAO,aAEhCkC,GAAO,eAGTA,IAAO,IAAMC,EAAM,IAAME,EAAOE,GAAGJ,GAAO,KAAOA,EAAM,UAIzDxC,SAAQC,KAAK,IAAMuC,EAAM,qCAM/BD,IAAO,iBAQXvC,SAAQC,KAAK,0BAGfsC,IAAO,cACPA,GAAO,WAEP1D,KAAKG,MAAQuD,GAKf3D,EAAQyC,UAAU2B,SAAW,SAAS/D,GAEpC,GAAIgE,GAAM,SAGV,KAAK,GAAIT,KAAOvD,GACd,GAA0B,gBAAfA,GAAMuD,GACXxB,EAASE,QAAQuB,QAAQD,KAAQ,EACnCS,GAAO,IAAMT,EAAM,IAAMvD,EAAMuD,GAAO,KAAOA,EAAM,MAEnDxC,QAAQC,KAAK,IAAMuC,EAAM,0CAG3B,IAAW,QAAPA,EAAe,CACjB,GAAItC,GAAOjB,EAAY,IACnBiB,GAAKC,OACP8C,GAAO,eAAiB/C,EAAKC,KAAO,KAChCD,EAAKE,OACP6C,GAAO,SAAW/C,EAAKE,KAAO,aAE5BF,EAAKG,OACP4C,GAAO,SAAW/C,EAAKG,KAAO,aAEhC4C,GAAO,WAMf,GAAIC,GAASjE,EAAM0D,MAEnB,IAAIO,EACF,IAAK,GAAIN,GAAI,EAAGA,EAAIM,EAAOL,OAAQD,IAAK,CAEtC,GAAIE,GAAMI,EAAON,GAAQ,IACrBG,EAAMG,EAAON,GAAQ,GAEzB,KAAIE,IAAOC,EAkCT,KAAM,+EAhCNE,IAAO,eAAiBH,EAAM,UAAYC,EAAM,MAGhD,KAAK,GAAIP,KAAOU,GAAON,GACrB,GAAW,OAAPJ,GAAuB,OAAPA,EAClB,GAAIxB,EAASG,QAAQsB,QAAQD,KAAQ,EACnC,GAAW,QAAPA,EAAe,CACjB,GAAItC,GAAOgD,EAAON,GAAS,IACvB1C,GAAKC,OACP8C,GAAO,eAAiB/C,EAAKC,KAAO,KAChCD,EAAKE,OACP6C,GAAO,SAAW/C,EAAKE,KAAO,aAE5BF,EAAKG,OACP4C,GAAO,SAAW/C,EAAKG,KAAO,aAEhC4C,GAAO,eAGTA,IAAO,IAAMT,EAAM,IAAMU,EAAON,GAAGJ,GAAO,KAAOA,EAAM,UAIzDxC,SAAQC,KAAK,IAAMuC,EAAM,qCAM/BS,IAAO,iBAQXjD,SAAQC,KAAK,0BAGfgD,IAAO,WAEPpE,KAAKI,MAAQgE,GAIfrE,EAAQyC,UAAU8B,aAAe,SAASjE,GAExC,GAAIkE,GAAM,EAEV,IAAIlE,EACF,IAAK,GAAI0D,GAAI,EAAGA,EAAI1D,EAAU2D,OAAQD,IAAK,CAEzC,GAAIE,GAAM5D,EAAU0D,GAAQ,IACxBG,EAAM7D,EAAU0D,GAAQ,GAE5B,KAAIE,IAAOC,EAkCT,KAAM,6EAhCNK,IAAO,aAAeN,EAAM,UAAYC,EAAM,MAG9C,KAAK,GAAIP,KAAOtD,GAAU0D,GACxB,GAAW,OAAPJ,GAAuB,OAAPA,EAClB,GAAIxB,EAASG,QAAQsB,QAAQD,KAAQ,EACnC,GAAW,QAAPA,EAAe,CACjB,GAAItC,GAAOhB,EAAU0D,GAAS,IAC1B1C,GAAKC,OACPiD,GAAO,eAAiBlD,EAAKC,KAAO,KAChCD,EAAKE,OACPgD,GAAO,SAAWlD,EAAKE,KAAO,aAE5BF,EAAKG,OACP+C,GAAO,SAAWlD,EAAKG,KAAO,aAEhC+C,GAAO,eAGTA,IAAO,IAAMZ,EAAM,IAAMtD,EAAU0D,GAAGJ,GAAO,KAAOA,EAAM,UAI5DxC,SAAQC,KAAK,IAAMuC,EAAM,qCAM/BY,IAAO,eAQXpD,SAAQC,KAAK,uBAGfpB,MAAKK,UAAYkE,EAuBnB,IAAIhE,GAAS,WAEX,OAEEC,OAAQ,WACN,IAAK,GAAIuD,GAAI,EAAGA,EAAIS,UAAUR,OAAQD,IACpC,IAAK,GAAIJ,KAAOa,WAAUT,GACpBS,UAAUT,GAAGU,eAAed,KAC9Ba,UAAU,GAAGb,GAAOa,UAAUT,GAAGJ,GAIvC,OAAOa,WAAU,IAGnBtB,SAAU,WAER,GAAIwB,GAAKvB,OAAOC,UAAUuB,UACtBC,EAAOF,EAAGd,QAAQ,SAClBiB,EAAUH,EAAGd,QAAQ,YACrBkB,EAAOJ,EAAGd,QAAQ,QAGtB,OAAIgB,GAAO,GAAKC,EAAU,GAAKC,EAAO,MAS5C,OAAO/E","file":"gpxmake.min.js","sourcesContent":["/*\n * Gpxmake\n *\n * Converting GPS json data to GPX file in pure Javascript\n *\n * @author: Feyyaz Akku≈ü\n *\n */\n(function(root, factory) {\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && typeof module.exports) {\n      exports = module.exports = factory(root, exports);\n    }\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], function(exports) {\n      root.Gpxmake = factory(root, exports);\n    });\n  } else {\n    root.Gpxmake = factory();\n  }\n\n}(this, function() {\n\n  'use strict';\n\n  var elements = {\n    'rteType': ['name', 'cmt', 'desc', 'src', 'link', 'number', 'type'],\n    'trkType': ['name', 'cmt', 'desc', 'src', 'link', 'number', 'type'],\n    'wptType': ['lat', 'lon', 'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src', 'url', 'urlname', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop', 'ageofdgpsdata', 'dgpsid']\n  }\n\n  var fileInfo = {\n    creator: 'gpxmake'\n  };\n\n  // consructor\n  function Gpxmake(info) {\n\n    this.metadata = '';\n    this.track = '';\n    this.route = '';\n    this.waypoints = '';\n\n    fileInfo = utils.extend(fileInfo, info);\n\n    this.metadata = setMetaData(fileInfo);\n  }\n\n  // download file\n  Gpxmake.prototype.download = function(filename) {\n\n    filename = filename + '.gpx';\n\n    var content = setFileContent(this.metadata, this.track, this.route, this.waypoints);\n\n    var blob = new Blob([content], {\n      'type': 'application/xml'\n    });\n\n    var link = document.createElement('a');\n    document.body.appendChild(link);\n\n    // detect browser \n    if (!utils.detectIE()) { // other browsers\t    \t\n      link.href = window.URL.createObjectURL(blob);\n      link.download = filename;\n      link.click();\n\n    } else { // internet explorer\n      window.navigator.msSaveOrOpenBlob(blob, filename);\n    }\n  }\n\n  function setMetaData(metadata) {\n\n    var meta = '<metadata>\\n';\n\n    // name\n    if (metadata.name) {\n      meta += '<name>' + metadata.name + '</name>\\n';\n    }\n    // desc\n    if (metadata.desc) {\n      meta += '<desc>' + metadata.desc + '</desc>\\n';\n    }\n    // time\n    if (metadata.time) {\n      meta += '<time>' + metadata.time + '</time>\\n';\n    }\n    // keywords\n    if (metadata.keywords) {\n      meta += '<keywords>' + metadata.keywords + '</keywords>\\n';\n    }\n    // author\n    var author = metadata.author;\n    if (author) {\n      meta += '<author>\\n';\n      if (author.name) {\n        meta += '<name>' + author.name + '</name>\\n';\n      }\n      if (author.email) {\n        if (author.email.id && author.email.domain) {\n          meta += '<email id=\"' + author.email.id + '\" domain=\"' + author.email.domain + '\" />\\n';\n        } else {\n          console.warn(\"<email> element should have id and domain information.\");\n        }\n      }\n      if (author.link) {\n        if (author.link.href) {\n          meta += '<link href=\"' + author.link.href + '\">\\n';\n\n          if (author.link.text) {\n            meta += '<text>' + author.link.text + '</text>\\n';\n          }\n          if (author.link.type) {\n            meta += '<type>' + author.link.type + '</type>\\n';\n          }\n          meta += '</link>\\n';\n        } else {\n          console.warn(\"<link> element should have href information.\");\n        }\n      }\n      meta += '</author>\\n';\n    }\n\n    // copyright\n    var copyright = metadata.copyright;\n    if (copyright) {\n      if (copyright.author) {\n        meta += '<copyright author=\"' + copyright.author + '\">\\n';\n\n        if (copyright.year) {\n          meta += '<year>' + copyright.year + '</year>\\n';\n        }\n        if (copyright.licence) {\n          meta += '<licence>' + copyright.licence + '</licence>\\n';\n        }\n        meta += '</copyright>\\n';\n      } else {\n        console.warn(\"<copyright> element should have author information.\");\n      }\n    }\n\n    // link\n    var link = metadata.link;\n    if (link) {\n      if (link.href) {\n        meta += '<link href=\"' + link.href + '\">\\n';\n\n        if (link.text) {\n          meta += '<text>' + link.text + '</text>\\n';\n        }\n        if (link.type) {\n          meta += '<type>' + link.type + '</type>\\n';\n        }\n        meta += '</link>';\n      } else {\n        console.warn(\"<link> element should have href information.\");\n      }\n    }\n\n    // bounds\n    var bounds = metadata.bounds;\n    if (bounds) {\n      if (bounds.minlat && bounds.minlon && bounds.maxlat && bounds.maxlon) {\n        meta += '<bounds minlat=\"' + bounds.minlat + '\" minlon=\"' + bounds.minlon + '\" maxlat=\"' + bounds.maxlat + '\" maxlon=\"' + bounds.maxlon + '\" />\\n';\n      } else {\n        console.warn(\"<bounds> element should have minlat, minlon, maxlat and maxlon information.\");\n      }\n    }\n\n    meta += '</metadata>\\n';\n    return meta;\n  }\n\n  Gpxmake.prototype.addTrack = function(track) {\n\n    var trk = '<trk>\\n';\n\n    // add optinal elements\n    for (var key in track) {\n      if (typeof(track[key]) == 'string') {\n        if (elements.trkType.indexOf(key) != -1) {\n          trk += '<' + key + '>' + track[key] + '</' + key + '>\\n';\n        } else {\n          console.warn(\"'\" + key + \"' is not a valid gpx file element.\");\n        }\n      } else {\n        if (key == 'link') {\n          var link = track['link'];\n          if (link.href) {\n            trk += '<link href=\"' + link.href + '\">';\n            if (link.text) {\n              trk += '<text>' + link.text + '</text>\\n';\n            }\n            if (link.type) {\n              trk += '<type>' + link.type + '</type>\\n';\n            }\n            trk += '</link>'\n          }\n        }\n      }\n    }\n\n    trk += '<trkseg>\\n';\n\n    var trkpts = track.points;\n\n    if (trkpts) {\n      for (var i = 0; i < trkpts.length; i++) {\n\n        var lat = trkpts[i]['lat'];\n        var lon = trkpts[i]['lon'];\n\n        if (lat && lon) {\n          // add lat, long required elements\n          trk += '<trkpt lat=\"' + lat + '\" lon=\"' + lon + '\">\\n';\n\n          // add optinal elements\n          for (var key in trkpts[i]) {\n            if (key != 'lat' && key != 'lon') {\n              if (elements.wptType.indexOf(key) != -1) {\n                if (key == 'link') {\n                  var link = trkpts[i]['link'];\n                  if (link.href) {\n                    trk += '<link href=\"' + link.href + '\">';\n                    if (link.text) {\n                      trk += '<text>' + link.text + '</text>\\n';\n                    }\n                    if (link.type) {\n                      trk += '<type>' + link.type + '</type>\\n';\n                    }\n                    trk += '</link>'\n                  }\n                } else {\n                  trk += '<' + key + '>' + trkpts[i][key] + '</' + key + '>\\n';\n                }\n\n              } else {\n                console.warn(\"'\" + key + \"' is not a valid gpx file element.\");\n              }\n            }\n          }\n\n          // close trkpt element\n          trk += '</trkpt>\\n'\n\n        } else {\n          throw ('Trackpoints should have lat and lon information. Please reorganize your data.');\n        }\n      }\n\n    } else {\n      console.warn(\"No track points defined\");\n    }\n\n    trk += '</trkseg>\\n';\n    trk += '</trk>\\n';\n\n    this.track = trk;\n  }\n\n\n  // set route <rte></rte>\n  Gpxmake.prototype.addRoute = function(route) {\n\n    var rte = '<rte>\\n';\n\n    // add optinal elements\n    for (var key in route) {\n      if (typeof(route[key]) == 'string') {\n        if (elements.trkType.indexOf(key) != -1) {\n          rte += '<' + key + '>' + route[key] + '</' + key + '>\\n';\n        } else {\n          console.warn(\"'\" + key + \"' is not a valid gpx file element.\");\n        }\n      } else {\n        if (key == 'link') {\n          var link = route['link'];\n          if (link.href) {\n            rte += '<link href=\"' + link.href + '\">';\n            if (link.text) {\n              rte += '<text>' + link.text + '</text>\\n';\n            }\n            if (link.type) {\n              rte += '<type>' + link.type + '</type>\\n';\n            }\n            rte += '</link>'\n          }\n        }\n      }\n    }\n\n    var rtepts = route.points;\n\n    if (rtepts) {\n      for (var i = 0; i < rtepts.length; i++) {\n\n        var lat = rtepts[i]['lat'];\n        var lon = rtepts[i]['lon'];\n\n        if (lat && lon) {\n          // add lat, long required elements\n          rte += '<rtept lat=\"' + lat + '\" lon=\"' + lon + '\">\\n';\n\n          // add optinal elements\n          for (var key in rtepts[i]) {\n            if (key != 'lat' && key != 'lon') {\n              if (elements.wptType.indexOf(key) != -1) {\n                if (key == 'link') {\n                  var link = rtepts[i]['link'];\n                  if (link.href) {\n                    rte += '<link href=\"' + link.href + '\">';\n                    if (link.text) {\n                      rte += '<text>' + link.text + '</text>\\n';\n                    }\n                    if (link.type) {\n                      rte += '<type>' + link.type + '</type>\\n';\n                    }\n                    rte += '</link>'\n                  }\n                } else {\n                  rte += '<' + key + '>' + rtepts[i][key] + '</' + key + '>\\n';\n                }\n\n              } else {\n                console.warn(\"'\" + key + \"' is not a valid gpx file element.\");\n              }\n            }\n          }\n\n          // close trkpt element\n          rte += '</rtept>\\n'\n\n        } else {\n          throw ('Routepoints should have lat and lon information. Please reorganize your data.');\n        }\n      }\n\n    } else {\n      console.warn(\"No route points defined\");\n    }\n\n    rte += '</rte>\\n';\n\n    this.route = rte;\n  }\n\n  // set waypoints\n  Gpxmake.prototype.addWaypoints = function(waypoints) {\n\n    var wpt = '';\n\n    if (waypoints) {\n      for (var i = 0; i < waypoints.length; i++) {\n\n        var lat = waypoints[i]['lat'];\n        var lon = waypoints[i]['lon'];\n\n        if (lat && lon) {\n          // add lat, long required elements\n          wpt += '<wpt lat=\"' + lat + '\" lon=\"' + lon + '\">\\n';\n\n          // add optinal elements\n          for (var key in waypoints[i]) {\n            if (key != 'lat' && key != 'lon') {\n              if (elements.wptType.indexOf(key) != -1) {\n                if (key == 'link') {\n                  var link = waypoints[i]['link'];\n                  if (link.href) {\n                    wpt += '<link href=\"' + link.href + '\">';\n                    if (link.text) {\n                      wpt += '<text>' + link.text + '</text>\\n';\n                    }\n                    if (link.type) {\n                      wpt += '<type>' + link.type + '</type>\\n';\n                    }\n                    wpt += '</link>'\n                  }\n                } else {\n                  wpt += '<' + key + '>' + waypoints[i][key] + '</' + key + '>\\n';\n                }\n\n              } else {\n                console.warn(\"'\" + key + \"' is not a valid gpx file element.\");\n              }\n            }\n          }\n\n          // close trkpt element\n          wpt += '</wpt>\\n'\n\n        } else {\n          throw ('Waypoints should have lat and lon information. Please reorganize your data.');\n        }\n      }\n\n    } else {\n      console.warn(\"No waypoints defined\");\n    }\n\n    this.waypoints = wpt;\n  }\n\n  // set xml file content\n  function setFileContent(metadata, track, route, waypoints) {\n\n    var xml = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\n' +\n      '<gpx xsi:schemaLocation=\"http://www.topografix.com/GPX/1/1 ' +\n      'http://www.topografix.com/GPX/1/1/gpx.xsd\" ' +\n      'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' +\n      'version=\"1.1\" creator=\"gpxmake.js\" ' +\n      'xmlns=\"http://www.topografix.com/GPX/1/1\">\\n';\n\n    xml += metadata;\n    xml += track;\n    xml += route;\n    xml += waypoints;\n    xml += '</gpx>';\n\n    return xml;\n  }\n\n  // helpers\n  var utils = (function() {\n\n    return {\n\n      extend: function() {\n        for (var i = 1; i < arguments.length; i++) {\n          for (var key in arguments[i]) {\n            if (arguments[i].hasOwnProperty(key)) {\n              arguments[0][key] = arguments[i][key];\n            }\n          }\n        }\n        return arguments[0];\n      },\n\n      detectIE: function() {\n\n        var ua = window.navigator.userAgent;\n        var msie = ua.indexOf('MSIE ');\n        var trident = ua.indexOf('Trident/');\n        var edge = ua.indexOf('Edge/');\n\n        // internet explorer\n        if (msie > 0 || trident > 0 || edge > 0) {\n          return true;\n        }\n        // other browser\n        return false;\n      }\n    }\n  }());\n\n  return Gpxmake;\n\n}));\n"]}